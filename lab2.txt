1. Gas() used increamentSpeed() with amount between 0 and 1, while Break() uses decrementSpeed  with amount between 0 and 1. This implementation detail is not part of the contract of these methods. The contract of a method should only define the behavior that the method provides, and the inputs and outputs that it expects, without revealing its implementation details. In this case, the contract of Gas() should only specify that it increases the speed of the vehicle, while the contract of Brake() should only specify that it decreases the speed of the vehicle, without mentioning how this is implemented.

The two classes follow LSP but there is something that is that they both contain different methods apart from gas() and break() so it is not possible to switch between them at the time we want unless the common methods between them are used such as gas() and break().


2. First, I created a class called Storage, which contains some functions related to load and unload car. After that, the method of load the car is similar between the transport and the CarRepairShop in terms of the nearby, I used the same functions loadCars and unloadCars from Storage class. So delegation Delegation used in Transport and CarRepairShop when we send carloadW and carUnloadW.

While duplication  between Scania and transport. First, I created a class called Ramp and used this class med Scania  and Transport.

3. The code follows OCP, where it became possible to add more types of vehicles, for example, bicycles and motorcycles, without the need to modify Vehicle class (Especially after adding the truck class).

That's what I did from the start. Instead of creating a class for cars only, I created a class for all vehicles.


